* Redis notes

** Redis Cluster vs Sentinel

- Cluster: sharding (performance). 
- Sentinel: HA (high availibility).

* Redis Operator examples

Lot of examples, but that assign redis slots only this one:

- https://github.com/AmadeusITGroup/Redis-Operator

Links:

** Kubedb example

KubeDB uses *PodDisruptionBudget* to ensure that majority of these cluster replicas are available during
voluntary disruptions so that quorum is maintained and no data loss is occurred.


https://kubedb.com (backup, clone)

https://kubedb.com/docs/v2020.11.12/guides/redis/

An important concept:

RedisVersion CR: https://kubedb.com/docs/v2020.11.12/guides/redis/concepts/catalog/

The redis part: https://github.com/kubedb/redis/

* Operator madurity

1. Install

* Build

All the commands I use to build the operator. To run the

#+PROPERTY: header-args:sh  :session *sh*  :results output verbatim code replace

Clean all:

#+BEGIN_SRC sh
OP=redis-operator
OP_KIND=Redis
OP_GROUP=redis
OPERATOR_IMAGE_REPO=redisoperator
#+END_SRC

Clean all:

#+BEGIN_SRC sh
echo "Warning! deleting all!"
# rm -rf $HOME/src/$OP
#+END_SRC


#+BEGIN_SRC sh
# OP is the operator name
mkdir -p $HOME/src/$OP
cd $HOME/src/$OP
operator-sdk init --domain=danieldorado.github.io --repo=github.com/danieldorado/$OP
#+END_SRC

Create CRD and Controller.

-  ~main.go~ initializes the Manager.

#+BEGIN_SRC sh
operator-sdk create api --group $OP_GROUP --version v1alpha1 --kind $OP_KIND --resource=true --controller=true
#+END_SRC

Fill scaffolds. 

** TODO Define the API. Redis Types.

[[file:api/v1alpha1/redis_types.go]]

https://sdk.operatorframework.io/docs/building-operators/golang/tutorial/#define-the-api

Properties:

- Size: redis nodes number.

Invoke the =controller-gen= to generate =*.deepcopy.go= that implements =runtime.Object= interface:

#+BEGIN_SRC sh
make generate
#+END_SRC

Generate CRD manifests:

#+BEGIN_SRC sh
make manifests
#+END_SRC

Manifest: =config/crd/bases/redis.danieldorado.github.io_redis.yaml=

*** TODO Use OpenAPI

Use OpenAPI to validate: [[https://sdk.operatorframework.io/docs/building-operators/golang/tutorial/#openapi-validation]]


** TODO Define the Controller. Redis Controller.

- [[file:controllers/redis_controller.go]]

** Build and Push operator image

Kubebuilder is a prerequisite.

#+BEGIN_SRC sh
make docker-build docker-push IMG=danieladf/$OPERATOR_IMAGE_REPO:0.0.2
#+END_SRC

** Install the CRD and deploy to the cluster the Deployment

Create and edit the role patch: [[file:config/default/role_patch.yml]] patch [[file:config/rbac/role.yaml]]

#+BEGIN_SRC sh
make install
make deploy IMG=danieladf/$OPERATOR_IMAGE_REPO:0.0.2
#+END_SRC

#+RESULTS:
#+BEGIN_SRC sh

customresourcedefinition.apiextensions.k8s.io/redis.redis.danieldorado.github.io configured
/usr/bin/sh: 32: customresourcedefinition.apiextensions.k8s.io/redis.redis.danieldorado.github.io: not found
$ $ Error: evalsymlink failure on 'config/default' : lstat /home/dani/src/redis-operator/config/manager/config: no such file or directory
error: no objects passed to apply
/usr/bin/sh: 36: namespace/redis-operator-system: not found
/usr/bin/sh: 37: customresourcedefinition.apiextensions.k8s.io/redis.redis.danieldorado.github.io: not found
/usr/bin/sh: 38: role.rbac.authorization.k8s.io/redis-operator-leader-election-role: not found
/usr/bin/sh: 39: clusterrole.rbac.authorization.k8s.io/redis-operator-manager-role: not found
/usr/bin/sh: 40: clusterrole.rbac.authorization.k8s.io/redis-operator-metrics-reader: not found
/usr/bin/sh: 41: clusterrole.rbac.authorization.k8s.io/redis-operator-proxy-role: not found
/usr/bin/sh: 42: rolebinding.rbac.authorization.k8s.io/redis-operator-leader-election-rolebinding: not found
/usr/bin/sh: 43: clusterrolebinding.rbac.authorization.k8s.io/redis-operator-manager-rolebinding: not found
/usr/bin/sh: 44: clusterrolebinding.rbac.authorization.k8s.io/redis-operator-proxy-rolebinding: not found
/usr/bin/sh: 45: service/redis-operator-controller-manager-metrics-service: not found
/usr/bin/sh: 46: deployment.apps/redis-operator-controller-manager: not found
#+END_SRC

- Deployed in: =namespace/redis-operator-system created=

** Create a sample.

#+BEGIN_SRC  sh
oc project default
oc apply -f config/samples/redis_v1alpha1_redis.yaml
#+END_SRC

Clean all:

#+BEGIN_SRC sh
make uninstall
oc delete project/redis-operator-system
#+END_SRC
